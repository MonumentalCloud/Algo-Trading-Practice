# -*- coding: utf-8 -*-
"""algoTrading - 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QoBiR3x5thGYkEGfOsWc6ynm3bhIT1rS
"""

import pandas as pd
import requests
import math
from measures.secrets import IEX_CLOUD_API_TOKEN

stocks = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/AlgoTrading/sp_500_stocks.csv')

#Acquiring API Token from IEX Cloud API token


symbol = 'AAPL'
api_url = f'https://sandbox.iexapis.com/stable/stock/{symbol}/quote/?token={IEX_CLOUD_API_TOKEN}'
data = requests.get(api_url).json()

price = data['latestPrice']
market_cap = data['marketCap']

my_columns = ['Ticker', 'Stock Price', 'Mkt Cap', 'Num Shares to Buy']
final_dataframe = pd.DataFrame(columns = my_columns)
final_dataframe

final_dataframe.append(
    pd.Series(
        [
         symbol,
         price,
         market_cap,
         'N/A'
        ]
    ,index = my_columns,
    ),
    ignore_index=True
)

final_dataframe = pd.DataFrame(columns = my_columns)
for stock in stocks['Ticker']:
  api_url = f'https://sandbox.iexapis.com/stable/stock/{stock}/quote/?token={IEX_CLOUD_API_TOKEN}'
  data = requests.get(api_url).json()
  final_dataframe = final_dataframe.append(
      pd.Series([
                 stock,
                 data['latestPrice'],
                 data['marketCap'],
                 'N/A'
      ], index = my_columns),
      True
  )

final_dataframe

def chunks(lst, n):
  for i in range(0, len(lst),n):
    yield lst[i:i + n]

symbol_groups = list(chunks(stocks['Ticker'], 100))
symbol_strings = []
for i in range(0,len(symbol_groups)):
  symbol_strings.append(','.join(symbol_groups[i]))
  #symbol_strings = []

final_dataframe = pd.DataFrame(columns = my_columns)
for symbol_string in symbol_strings:
  batch_api_call_url = f"https://sandbox.iexapis.com/stable/stock/market/batch?symbols={symbol_string}&types=quote&token={IEX_CLOUD_API_TOKEN}"
  data = requests.get(batch_api_call_url).json()
  for symbol in symbol_string.split(','):
    final_dataframe = final_dataframe.append(
        pd.Series([
                   symbol,
                   data[symbol]['quote']['latestPrice'],
                   data[symbol]['quote']['marketCap'],
                    'N/A'
        ],index = my_columns),
        ignore_index = True
    )

final_dataframe

#Calculating the Number of Shares to Buy
portfolio_size = input('Enter the value of your portfolio ')

try:
  val = float(portfolio_size)
  print(val)
except ValueError:
  print('Please enter an integer')
  portfolio_size = input('Please try again: ')

position_size = float(val)/len(final_dataframe.index)
for i in range(0,len(final_dataframe.index)):
  final_dataframe.loc[i, 'Num Shares to Buy'] = math.floor(position_size/final_dataframe.loc[i, 'Stock Price'])
number_of_apple_shares = position_size/500

final_dataframe

writer = pd.ExcelWriter('recommended_trades.xlsx', engine = 'xlsxwriter')
final_dataframe.to_excel(writer, 'Recommended Trades', index = False)

background_color = '#0a0a23'
font_color = '#ffffff'

string_format = writer.book.add_format(
    {
        'font_color': font_color,
        'bg_color': background_color,
        'border': 1
    }
)
dollar_format = writer.book.add_format(
    {
        'num_format' : '$0.00',
        'font_color': font_color,
        'bg_color': background_color,
        'border': 1
    }
)
integer_format = writer.book.add_format(
    {
        'num_format': '0',
        'font_color': font_color,
        'bg_color': background_color,
        'border': 1
    }
)

writer.sheets['Recommended Trades'].write('A1', 'Ticker', string_format)

column_formats = {
    'A':['Ticker', string_format],
    'B':['Stock Price', dollar_format],
    'C':['Market Capitalization', dollar_format],
    'D':['Num of Shares', integer_format]
}

for column in column_formats.keys():
  writer.sheets['Recommended Trades'].set_column(f'{column}:{column}', 18, column_formats[column][1])
writer.save()

from google.colab import files
files.download('recommended_trades.csv')